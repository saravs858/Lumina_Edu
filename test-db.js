const mongoose = require('mongoose');
require('dotenv').config();

console.log('üîç Iniciando teste de conex√£o com MongoDB...');
console.log('üìå URI usada:', process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017/lumina-edu');

// Configura√ß√£o otimizada para Mongoose 8+
const connectionOptions = {
  serverSelectionTimeoutMS: 5000, // 5 segundos para sele√ß√£o de servidor
  socketTimeoutMS: 45000,        // 45 segundos para opera√ß√µes
  maxPoolSize: 10                // N√∫mero m√°ximo de conex√µes
};

mongoose.connect(process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017/lumina-edu', connectionOptions)
  .then(() => {
    console.log('‚úÖ Conex√£o bem-sucedida!');
    console.log('üìä Status da conex√£o:');
    console.log('- Host:', mongoose.connection.host);
    console.log('- Porta:', mongoose.connection.port);
    console.log('- Banco de dados:', mongoose.connection.name);
    
    return mongoose.connection.close();
  })
  .then(() => {
    console.log('üõë Conex√£o encerrada com sucesso');
    process.exit(0);
  })
  .catch(err => {
    console.error('‚ùå Falha na conex√£o:', err.message);
    console.log('\nüîß Poss√≠veis solu√ß√µes:');
    
    if (err.message.includes('ECONNREFUSED')) {
      console.log('1. O MongoDB n√£o est√° rodando - inicie o servi√ßo:');
      console.log('   - Windows (como Admin): "net start MongoDB"');
      console.log('   - Linux/Mac: "sudo systemctl start mongod"');
    } else if (err.message.includes('ENOTFOUND')) {
      console.log('1. Verifique se a URI no arquivo .env est√° correta');
      console.log('2. Confira seu acesso √† internet');
    } else if (err.message.includes('timed out')) {
      console.log('1. O servidor MongoDB pode estar sobrecarregado');
      console.log('2. Aumente o timeout em connectionOptions');
    }
    
    console.log('\nüí° Dica: Verifique se o MongoDB est√° acess√≠vel via:');
    console.log('   mongo --host localhost --port 27017');
    
    process.exit(1);
  });